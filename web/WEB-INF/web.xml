<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- 标记这个Web应用的名称 -->
    <display-name>xxtserver</display-name>
    
    <!-- 给出与此有关的说明性文本 -->
    <description>xxtserver(校讯通手机服务端)</description>
    
    <!-- context-param元素声明应用范围内的初始化参数  -->

    <!-- 把Web应用根目录以属性名添加到系统参数中 -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>tsmis.root</param-value>
    </context-param>
    
    <!-- 页面缓存机配置文件路径 -->
    <context-param>
        <param-name>pageCache</param-name>
        <param-value>/WEB-INF/pagecache.xml</param-value>
    </context-param>

    <!-- 指定 Log4J 配置文件的地址 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>

    <!-- 指定多个配置文件，且配置参数名为“contextConfigLocation” -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/classes/conf/spring/applicationContext*.xml</param-value>
    </context-param>
	 
	 <!-- 配置字符编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>com.fsc.framework.filter.SetCharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
	 </filter>
	<!-- 配置字符编码过滤器拦截的URL -->
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Hibernate Open Session in View Filter -->   
    <!--filter>   
        <filter-name>hibernateFilter</filter-name>   
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>   
    </filter-->   
     
    <!-- 配置Struts2核心过滤器拦截的URL -->
    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
    </filter>
    <filter-mapping> 
        <filter-name>struts2</filter-name> 
        <url-pattern>/login.jsp</url-pattern> 
    </filter-mapping> 
    <filter-mapping> 
        <filter-name>struts2</filter-name> 
        <url-pattern>*.do</url-pattern> 
    </filter-mapping> 
    <filter-mapping> 
        <filter-name>struts2</filter-name> 
        <url-pattern>*.action</url-pattern> 
    </filter-mapping> 
    
    <!--  
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->

    <!-- 事件监听程序在建立、修改和删除会话或servlet环境时得到通知 -->
       <!-- 使用监听器初始化Log4J日志引擎 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
	<!-- 加载页面缓存配置文件 -->
   <!--  <listener>
        <listener-class>com.fsc.framework.listener.PagecacheConfigListener</listener-class>
    </listener> -->
	
    <!-- 负责将 Web 应用根目录以 webAppRootKey 上下文参数指定的属性名添加到系统参数中 -->
    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
    </listener>

    <!-- 采用监听器初始化Spring容器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- Spring 刷新Introspector防止内存泄露 -->   
    <listener>   
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>   
    </listener>  

    <servlet>
        <servlet-name>img</servlet-name>
        <servlet-class>com.fsc.util.ImageVerifyCodeGenerator</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>img</servlet-name>
	    <url-pattern>/imageVerifyCode</url-pattern>
    </servlet-mapping>
    
    <servlet>
		<servlet-name>ConnectorServlet</servlet-name>
		<servlet-class>
			net.fckeditor.connector.ConnectorServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
  <servlet>
    <servlet-name>PageStaticServlet</servlet-name>
    <servlet-class>com.fsc.framework.listener.PageStaticServlet</servlet-class>
    <load-on-startup>9</load-on-startup>
  </servlet>


	<servlet-mapping>
		<servlet-name>ConnectorServlet</servlet-name>
		<!-- Do not wrap this line otherwise Glassfish will fail to load this file -->
		<url-pattern>/fckeditor/editor/filemanager/connectors/*</url-pattern>
	</servlet-mapping>
    
    <!-- 如果某个会话在指定时间（以分钟为单位）内未被访问，服务器可以抛弃它以节省内存 -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    
    <!-- 指示服务器在收到引用一个目录名而不是文件名的URL时使用的文件-->
    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>
    
    <!-- 错误页面 -->
    <error-page>
    	<error-code>404</error-code>
    	<location>/error_404.html</location>
  	</error-page>
    
    <jsp-config>
        <!-- 为了兼容servlet 2.3以前的规范，手动配置struts 2 的标签库 -->
        <taglib>
            <taglib-uri>/s</taglib-uri>
            <taglib-location>/WEB-INF/struts-tags.tld</taglib-location>
        </taglib>
        <!-- 为了让tomcat 5.x支持EL表达式
        <jsp-property-group>
            <url-pattern>*.jsp</url-pattern>
            <el-ignored>false</el-ignored>
        </jsp-property-group> -->
    </jsp-config>
    
</web-app>